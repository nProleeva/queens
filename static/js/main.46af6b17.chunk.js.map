{"version":3,"sources":["worker.ts","App.tsx","index.tsx"],"names":["fn2workerURL","fn","blob","Blob","toString","replace","type","URL","createObjectURL","e","boolArray","time","Date","now","objArray","cells","Object","keys","n","Math","sqrt","length","indexCell","returnArray","objArrayFlag","pushCell","intermediateArray","item","forEach","el","indexOf","entries","data","Array","fill","funcReturn","items","varItems","varIntermediate","newItems","filter","index","includes","some","push","concat","pop","recursive","locatedQueen","newArray","map","elArray","str","String","fromCharCode","join","ports","console","log","postMessage","App","useRef","useState","valueInput","setInput","form","count","setCount","myWorker","useEffect","window","Worker","current","worker_script","addEventListener","filename","file","navigator","msSaveOrOpenBlob","a","document","createElement","url","href","download","click","revokeObjectURL","array","i","j","el1","index1","el2","index2","abs","Fragment","onSubmit","event","parseInt","elements","value","preventDefault","stopPropagation","ref","htmlFor","name","onChange","exec","target","id","disabled","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46af6b17.chunk.js","sourcesContent":["import type {obj} from \"./App\";\n\nlet onmessage:(e:MessageEvent)=>void = function(e:MessageEvent) {\n    let recursive:(objArray:obj<Array<string>>)=>Array<Array<string>> = function (objArray:obj<Array<string>>) {\n        let cells:Array<string> = Object.keys(objArray),\n            n:number = Math.sqrt(cells.length),\n            indexCell:number = 0,\n            returnArray:Array<Array<string>> = [],\n            objArrayFlag:obj<Array<boolean>> = {},\n            result:boolean = false;\n        Object.entries(objArray).forEach((data:[string,Array<string>]):void=>{objArrayFlag[data[0]] = new Array<boolean>(data[1].length).fill(false);});\n        function pushCell(intermediateArray:Array<string>,item:string):void {\n            intermediateArray.forEach((el:string)=>{\n                objArrayFlag[el][objArray[el].indexOf(item)] = true;\n                objArrayFlag[item][objArray[item].indexOf(el)] = true;\n            });\n        }\n        let funcReturn:(varItems?:Array<string>,varIntermediate?:Array<string>)=>void = function (varItems:Array<string> = objArray[cells[indexCell]],varIntermediate:Array<string> = [cells[indexCell]]):void {\n            if(cells.length !== indexCell) {\n                varItems.forEach((item:string)=>{\n                    let newItems = objArray[item].filter((el:string,index:number)=>varItems.includes(el));\n                    if((varIntermediate.length + newItems.length + 1 - n) >= 0 && varIntermediate.some((el:string)=>!objArrayFlag[el][objArray[el].indexOf(item)])) {\n                        if(varIntermediate.length < 2) pushCell(varIntermediate, item);\n                        varIntermediate.push(item);\n                        if (newItems.length) funcReturn(newItems, varIntermediate);\n                        else if (varIntermediate.length === n) returnArray.push(varIntermediate.concat());\n                        varIntermediate.pop();\n                    }\n                })\n                if(varIntermediate.length===1) {\n                    if(n===1)\n                        returnArray.push(varIntermediate.concat());\n                    indexCell++;\n                    let items:Array<string>,\n                        intermediateArray:Array<string>;\n                    if(indexCell!==cells.length) {\n                        items = objArray[cells[indexCell]];\n                        intermediateArray = [cells[indexCell]];\n                    }\n                    else {\n                        items = [];\n                        intermediateArray = [];\n                    }\n                    funcReturn(items, intermediateArray);\n                }\n            }\n            else {\n                result = true;\n                return;\n            }\n\n            if(result) return;\n        }\n        funcReturn();\n        return returnArray;\n    }\n    let boolArray: Array<string> = [],\n        time:number = (+ Date.now());\n    const locatedQueens:Array<Array<string>> = recursive(e.data[0]);\n    locatedQueens.forEach((locatedQueen:Array<string>)=>{\n        let newArray:string = e.data[1]?.map((elArray: Array<string>) => {\n            return elArray.map<string>((str: string) => locatedQueen.includes(str)?String.fromCharCode(9819):\".\").join(\" \")\n        }).join('\\n');\n        if (!boolArray.includes(newArray))\n            boolArray.push(newArray);\n    });\n    if(e.ports) console.log(`${(+ Date.now() - time)}ms - время нахождения всевозможных значений`);\n    e.ports[0].postMessage(boolArray);\n}\n\nfunction fn2workerURL(fn:(e:MessageEvent)=>void) {\n    let blob:Blob = new Blob([`onmessage = ${fn.toString().replace(/e\\.ports\\[0\\]\\.|window\\./g,\"\")}`], {type: 'application/javascript'})\n    return URL.createObjectURL(blob)\n}\nexport default fn2workerURL(onmessage);","import React, {FormEvent, useEffect, useRef, useState} from 'react';\nimport worker_script from \"./worker\";\nimport './App.css';\n\nexport interface obj<T> {\n    [key: string]: T\n}\ninterface FormElements extends HTMLCollection {\n    n: HTMLInputElement\n}\ndeclare var Blob: {\n    prototype: Blob;\n    new (): Blob;\n    new (request: Array<string>, mime?: {type:string}): Blob;\n}\n\n\nfunction App() {\n    const n = useRef<number>(0);\n    const [valueInput, setInput] = useState<string>(\"8\");\n    const form = useRef<HTMLFormElement>(null);\n    const objArray = useRef<obj<Array<string>>>({});\n    const [count, setCount] = useState<number|string>();\n    const myWorker = useRef<Worker>();\n\n    function download(data:string, filename:string, type:string):void {\n        let file:Blob = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            a.click();\n            window.URL.revokeObjectURL(url);\n        }\n    }\n\n    useEffect(()=>{\n        if (window.Worker && !myWorker.current) {\n            myWorker.current = new Worker(worker_script);\n            myWorker.current.addEventListener(\"message\", (e:MessageEvent):void => {\n                if(e.data.length) download(e.data.join('\\n'), `queens${n.current}.txt`, \"text/html\");\n                n.current = 0;\n                setCount(e.data.length);\n            }, false);\n        }\n    },[])\n\n    useEffect(()=>{\n        if(n.current) {\n            let array: Array<Array<string>> = [[]];\n            objArray.current = {};\n            for (let i = 0; i < n.current; i++) {\n                array.push([]);\n                for (let j = 0; j < n.current; j++)\n                    array[i].push(`${i}${j}`);\n            }\n            array.forEach((el1: Array<string>, index1: number) => {\n                el1.forEach((el2: string, index2: number) => {\n                    objArray.current[el2] = [];\n                    for (let i = 0; i < n.current; i++) {\n                        if (i === index1) continue;\n                        for (let j = 0; j < n.current; j++) {\n                            if (j === index2 || Math.abs(j - index2) === Math.abs(i - index1)) continue;\n                            objArray.current[el2].push(`${i}${j}`);\n                        }\n                    }\n                })\n            })\n            myWorker.current?.postMessage([objArray.current,array]);\n        }\n    },[count])\n    function onSubmit(event:FormEvent):void {\n        n.current = parseInt((form.current?.elements as FormElements).n.value);\n        setCount(\"Загрузка...\");\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    function handleChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        setInput((/[1-9][0-9]?/.exec(event.target.value) as string|null)||'');\n    }\n    return (\n        <React.Fragment>\n            <h3>Задача о Ферзях</h3>\n            <form onSubmit={onSubmit} ref={form}>\n                <label htmlFor=\"n\">n =</label>\n                <input type=\"text\" value={valueInput} name=\"n\" onChange={handleChange} id=\"n\" disabled={typeof count===\"string\"?true:false}/>\n                <input type=\"submit\" value={\"Найти\"} disabled={typeof count===\"string\"?true:false}/>\n            </form>\n            <div className=\"count\">\n                {count}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}