{"version":3,"sources":["worker.ts","App.tsx","index.tsx"],"names":["fn2workerURL","fn","blob","Blob","toString","replace","type","URL","createObjectURL","e","boolArray","time","Date","now","locatedQueens","objArray","cells","Object","keys","n","Math","sqrt","length","indexCell","returnArray","objArrayFlag","pushCell","intermediateArray","item","forEach","el","indexOf","entries","key","value","Array","fill","funcReturn","items","varItems","varIntermediate","newItems","filter","index","includes","some","push","concat","pop","recursive","data","locatedQueen","newArray","map","elArray","str","String","fromCharCode","join","console","log","ports","postMessage","App","useState","setN","valueInput","setInput","form","useRef","count","setCount","myWorker","onmessage","filename","file","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","href","download","click","revokeObjectURL","useEffect","Worker","current","worker_script","addEventListener","array","i","j","el1","index1","el2","index2","abs","Fragment","onSubmit","event","parseInt","elements","preventDefault","stopPropagation","ref","htmlFor","name","onChange","exec","target","id","disabled","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61b205ee.chunk.js","sourcesContent":["interface obj<T> {\n    [key: string]: T\n}\n\nlet onmessage:(e:MessageEvent)=>void = function(e:MessageEvent) {\n    let recursive:(objArray:obj<Array<string>>)=>Array<Array<string>> = function (objArray:obj<Array<string>>) {\n        let cells:Array<string> = Object.keys(objArray),\n            n:number = Math.sqrt(cells.length),\n            indexCell:number = 0,\n            returnArray:Array<Array<string>> = [],\n            objArrayFlag:obj<Array<boolean>> = {},\n            result:boolean = false;\n        Object.entries(objArray).forEach(([key,value]:[string,Array<string>])=>objArrayFlag[key] = new Array<boolean>(value.length).fill(false));\n        function pushCell(intermediateArray:Array<string>,item:string):void {\n            intermediateArray.forEach((el:string)=>{\n                objArrayFlag[el][objArray[el].indexOf(item)] = true;\n                objArrayFlag[item][objArray[item].indexOf(el)] = true;\n            });\n        }\n        function funcReturn(varItems:Array<string> = objArray[cells[indexCell]],varIntermediate:Array<string> = [cells[indexCell]]):void {\n            if(cells.length !== indexCell) {\n                varItems.forEach((item:string)=>{\n                    let newItems = objArray[item].filter((el:string,index:number)=>varItems.includes(el));\n                    if((varIntermediate.length + newItems.length + 1 - n) >= 0 && varIntermediate.some((el:string)=>!objArrayFlag[el][objArray[el].indexOf(item)])) {\n                        if(varIntermediate.length < 2) pushCell(varIntermediate, item);\n                        varIntermediate.push(item);\n                        if (newItems.length) funcReturn(newItems, varIntermediate);\n                        else if (varIntermediate.length === n) returnArray.push(varIntermediate.concat());\n                        varIntermediate.pop();\n                    }\n                })\n                if(varIntermediate.length===1) {\n                    indexCell++;\n                    let items:Array<string>,\n                        intermediateArray:Array<string>;\n                    if(indexCell!==cells.length) {\n                        items = objArray[cells[indexCell]];\n                        intermediateArray = [cells[indexCell]];\n                    }\n                    else {\n                        items = [];\n                        intermediateArray = [];\n                    }\n                    funcReturn(items, intermediateArray);\n                }\n            }\n            else {\n                result = true;\n                return;\n            }\n\n            if(result) return;\n        }\n        funcReturn();\n        return returnArray;\n    }\n    let boolArray: Array<string> = [],\n        time:number = (+ Date.now());\n    const locatedQueens:Array<Array<string>> = recursive(e.data[0]);\n    for (let locatedQueen of locatedQueens) {\n        let newArray:string = e.data[1]?.map((elArray: Array<string>) => {\n            return elArray.map<string>((str: string) => locatedQueen.includes(str)?String.fromCharCode(9819):\".\").join(\" \")\n        }).join('\\n');\n        if (!boolArray.includes(newArray))\n            boolArray.push(newArray);\n    }\n    console.log(`${(+ Date.now() - time)}ms - время нахождения всевозможных значений`);\n    e.ports[0].postMessage(boolArray);\n}\n\nfunction fn2workerURL(fn:(e:MessageEvent)=>void) {\n    var blob = new Blob(['onmessage = '+fn.toString().replace(/e\\.ports\\[0\\]\\./g,\"\")], {type: 'application/javascript'})\n    return URL.createObjectURL(blob)\n}\nexport default fn2workerURL(onmessage);","import React, {FormEvent, useEffect, useRef, useState} from 'react';\nimport worker_script from \"./worker\";\nimport './App.css';\n\ninterface obj<T> {\n    [key: string]: T\n}\ninterface FormElements extends HTMLCollection {\n    n: HTMLInputElement\n}\ndeclare var Blob: {\n    prototype: Blob;\n    new (): Blob;\n    new (request: Array<string>, mime?: {type:string}): Blob;\n}\n\n\nfunction App() {\n    const [n, setN] = useState<number>(0);\n    const [valueInput, setInput] = useState<string>(\"8\");\n    const form = useRef<HTMLFormElement>(null);\n    const objArray = useRef<obj<Array<string>>>({});\n    const [count, setCount] = useState<number|string>();\n    const myWorker = useRef<Worker>();\n\n    function download(data:string, filename:string, type:string):void {\n        let file:Blob = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            a.click();\n            window.URL.revokeObjectURL(url);\n        }\n    }\n\n    function onmessage(e:MessageEvent):void {\n        console.log(n);\n        if(e.data.length) download(e.data.join('\\n'), `queens${n}.txt`, \"text/html\");\n        setCount(e.data.length);\n    }\n\n    useEffect(()=>{\n        if (window.Worker && !myWorker.current) {\n            myWorker.current = new Worker(worker_script);\n            myWorker.current.addEventListener(\"message\", onmessage, false);\n        }\n    },[])\n\n    useEffect(()=>{\n        if(n) {\n            let array: Array<Array<string>> = [[]];\n            objArray.current = {};\n            for (let i = 0; i < n; i++) {\n                array.push([]);\n                for (let j = 0; j < n; j++)\n                    array[i].push(`${i}${j}`);\n            }\n            array.forEach((el1: Array<string>, index1: number) => {\n                el1.forEach((el2: string, index2: number) => {\n                    objArray.current[el2] = [];\n                    for (let i = 0; i < n; i++) {\n                        if (i === index1) continue;\n                        for (let j = 0; j < n; j++) {\n                            if (j === index2 || Math.abs(j - index2) === Math.abs(i - index1)) continue;\n                            objArray.current[el2].push(`${i}${j}`);\n                        }\n                    }\n                })\n            })\n            myWorker.current?.postMessage([objArray.current,array]);\n        }\n    },[n])\n    function onSubmit(event:FormEvent):void {\n        setN(parseInt((form.current?.elements as FormElements).n.value));\n        setCount(\"Загрузка...\");\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    function handleChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        setInput((/[1-9][0-9]?/.exec(event.target.value) as string|null)||'');\n    }\n    return (\n        <React.Fragment>\n            <h3>Задача о Ферзях</h3>\n            <form onSubmit={onSubmit} ref={form}>\n                <label htmlFor=\"n\">n =</label>\n                <input type=\"text\" value={valueInput} name=\"n\" onChange={handleChange} id=\"n\" disabled={typeof count===\"string\"?true:false}/>\n                <input type=\"submit\" value={\"Найти\"} disabled={typeof count===\"string\"?true:false}/>\n            </form>\n            <div className=\"count\">\n                {count}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}