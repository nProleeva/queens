{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","n","setN","valueInput","setInput","form","useRef","objArray","count","setCount","a","promise","Promise","resolve","cells","Object","keys","current","indexCell","returnArray","objArrayFlag","pushCell","intermediateArray","item","forEach","el","indexOf","entries","key","value","Array","length","fill","funcReturn","items","varItems","varIntermediate","newItems","filter","index","includes","some","push","concat","pop","useEffect","array","i","j","el1","index1","el2","index2","Math","abs","boolArray","time","Date","now","recursive","then","locatedQueens","locatedQueen","newArray","map","elArray","str","String","fromCharCode","join","console","log","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","Fragment","onSubmit","event","parseInt","elements","preventDefault","stopPropagation","ref","htmlFor","name","onChange","exec","target","id","disabled","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afb25f4f.chunk.js","sourcesContent":["import React, {FormEvent, useEffect, useRef, useState} from 'react';\nimport './App.css';\n\ninterface obj<T> {\n    [key: string]: T\n}\ninterface FormElements extends HTMLCollection {\n    n: HTMLInputElement\n}\ndeclare var Blob: {\n    prototype: Blob;\n    new (): Blob;\n    new (request: Array<string>, mime?: {type:string}): Blob;\n}\n\n\nfunction App() {\n    const [n, setN] = useState<number>(0);\n    const [valueInput, setInput] = useState<string>(\"8\");\n    const form = useRef<HTMLFormElement>(null);\n    const objArray = useRef<obj<Array<string>>>({});\n    const [count, setCount] = useState<number|string>();\n\n    function download(data:string, filename:string, type:string) {\n        let file:Blob = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            a.click();\n            window.URL.revokeObjectURL(url);\n        }\n    }\n\n    async function recursive() {\n        let promise = new Promise<Array<Array<string>>>((resolve) => {\n            let cells:Array<string> = Object.keys(objArray.current),\n                indexCell:number = 0,\n                returnArray:Array<Array<string>> = [],\n                objArrayFlag:obj<Array<boolean>> = {},\n                result:boolean = false;\n            Object.entries(objArray.current).forEach(([key,value]:[string,Array<string>])=>objArrayFlag[key] = new Array<boolean>(value.length).fill(false));\n            function pushCell(intermediateArray:Array<string>,item:string):void {\n                intermediateArray.forEach((el:string)=>{\n                    objArrayFlag[el][objArray.current[el].indexOf(item)] = true;\n                    objArrayFlag[item][objArray.current[item].indexOf(el)] = true;\n                });\n            }\n            function funcReturn(varItems:Array<string> = objArray.current[cells[indexCell]],varIntermediate:Array<string> = [cells[indexCell]]):void {\n                if(cells.length !== indexCell) {\n                    varItems.forEach((item:string)=>{\n                        let newItems = objArray.current[item].filter((el:string,index:number)=>varItems.includes(el));\n                        if((varIntermediate.length + newItems.length + 1 - n) >= 0 && varIntermediate.some((el:string)=>!objArrayFlag[el][objArray.current[el].indexOf(item)])) {\n                            if(varIntermediate.length < 2) pushCell(varIntermediate, item);\n                            varIntermediate.push(item);\n                            if (newItems.length) funcReturn(newItems, varIntermediate);\n                            else if (varIntermediate.length === n) returnArray.push(varIntermediate.concat());\n                            varIntermediate.pop();\n                        }\n                    })\n                    if(varIntermediate.length===1) {\n                        indexCell++;\n                        let items:Array<string>,\n                            intermediateArray:Array<string>;\n                        if(indexCell!==cells.length) {\n                            items = objArray.current[cells[indexCell]];\n                            intermediateArray = [cells[indexCell]];\n                        }\n                        else {\n                            items = [];\n                            intermediateArray = [];\n                        }\n                        funcReturn(items, intermediateArray);\n                    }\n                }\n                else {\n                    result = true;\n                    return;\n                }\n\n                if(result) return;\n            }\n            funcReturn();\n            resolve(returnArray);\n        });\n        return promise;\n    }\n\n    useEffect(()=>{\n        if(n) {\n            let array: Array<Array<string>> = [[]];\n            objArray.current = {};\n            for (let i = 0; i < n; i++) {\n                array.push([]);\n                for (let j = 0; j < n; j++)\n                    array[i].push(`${i}${j}`);\n            }\n            array.forEach((el1: Array<string>, index1: number) => {\n                el1.forEach((el2: string, index2: number) => {\n                    objArray.current[el2] = [];\n                    for (let i = 0; i < n; i++) {\n                        if (i === index1) continue;\n                        for (let j = 0; j < n; j++) {\n                            if (j === index2 || Math.abs(j - index2) === Math.abs(i - index1)) continue;\n                            objArray.current[el2].push(`${i}${j}`);\n                        }\n                    }\n                })\n            })\n            let boolArray: Array<string> = [],\n                time:number = (+ Date.now());\n            recursive().then((locatedQueens: Array<Array<string>>) => {\n                for (let locatedQueen of locatedQueens) {\n                    let newArray:string = array?.map((elArray: Array<string>) => {\n                        return elArray.map<string>((str: string) => locatedQueen.includes(str)?String.fromCharCode(9819):\".\").join(\" \")\n                    }).join('\\n');\n                    if (!boolArray.includes(newArray))\n                        boolArray.push(newArray);\n                }\n                console.log(`n=${n}, ${(+ Date.now() - time)}ms - время нахождения всевозможных значений`);\n                if(boolArray.length) download(boolArray.join('\\n'), `queens${n}.txt`, \"text/html\");\n                setCount(boolArray.length);\n            });\n        }\n    },[n])\n    function onSubmit(event:FormEvent):void {\n        setN(parseInt((form.current?.elements as FormElements).n.value));\n        setCount(\"Загрузка...\");\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    function handleChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        setInput((/[1-9][0-9]?/.exec(event.target.value) as string|null)||'');\n    }\n    return (\n        <React.Fragment>\n            <h3>Задача о Ферзях</h3>\n            <form onSubmit={onSubmit} ref={form}>\n                <label htmlFor=\"n\">n =</label>\n                <input type=\"text\" value={valueInput} name=\"n\" onChange={handleChange} id=\"n\" disabled={typeof count===\"string\"?true:false}/>\n                <input type=\"submit\" value={\"Найти\"} disabled={typeof count===\"string\"?true:false}/>\n            </form>\n            <div className=\"count\">\n                {count}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}