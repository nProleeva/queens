{"version":3,"sources":["worker.ts","App.tsx","index.tsx"],"names":["onmessage","e","boolArray","objArray","cells","Object","keys","n","Math","sqrt","length","indexCell","returnArray","objArrayFlag","pushCell","intermediateArray","item","forEach","el","indexOf","entries","data","Array","fill","funcReturn","items","varItems","varIntermediate","newItems","filter","index","includes","some","push","concat","pop","recursive","locatedQueen","newArray","map","elArray","str","String","fromCharCode","join","ports","postMessage","fn2workerURL","fn","blob","Blob","toString","replace","type","URL","createObjectURL","loading","App","useRef","time","useState","valueInput","setInput","form","count","setCount","myWorker","onmessageWorker","console","log","current","Date","now","filename","file","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","href","download","click","revokeObjectURL","useEffect","Worker","worker_script","addEventListener","array","i","j","el1","index1","el2","index2","abs","Fragment","onSubmit","event","parseInt","elements","value","preventDefault","stopPropagation","ref","htmlFor","name","onChange","exec","target","id","disabled","className","data-testid","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be154360.chunk.js","sourcesContent":["import type {obj} from \"./App\";\n\n//global.window.URL.createObjectURL = jest.fn();\n\nexport let onmessage:(e:MessageEvent<[obj<Array<string>>,Array<Array<string>>,(array:Array<string>)=>void ]>)=>void = function(e:MessageEvent<[obj<Array<string>>,Array<Array<string>>, (array:Array<string>)=>void]>) {\n    let recursive:(objArray:obj<Array<string>>)=>Array<Array<string>> = function (objArray:obj<Array<string>>) {\n        let cells:Array<string> = Object.keys(objArray),\n            n:number = Math.sqrt(cells.length),\n            indexCell:number = 0,\n            returnArray:Array<Array<string>> = [],\n            objArrayFlag:obj<Array<boolean>> = {},\n            result:boolean = false;\n        Object.entries(objArray).forEach((data:[string,Array<string>]):void=>{objArrayFlag[data[0]] = new Array<boolean>(data[1].length).fill(false);});\n        function pushCell(intermediateArray:Array<string>,item:string):void {\n            intermediateArray.forEach((el:string)=>{\n                objArrayFlag[el][objArray[el].indexOf(item)] = true;\n                objArrayFlag[item][objArray[item].indexOf(el)] = true;\n            });\n        }\n        let funcReturn:(varItems?:Array<string>,varIntermediate?:Array<string>)=>void = function (varItems:Array<string> = objArray[cells[indexCell]],varIntermediate:Array<string> = [cells[indexCell]]):void {\n            if(cells.length !== indexCell) {\n                varItems.forEach((item:string)=>{\n                    let newItems = objArray[item].filter((el:string,index:number)=>varItems.includes(el));\n                    if((varIntermediate.length + newItems.length + 1 - n) >= 0 && varIntermediate.some((el:string)=>!objArrayFlag[el][objArray[el].indexOf(item)])) {\n                        if(varIntermediate.length < 2) pushCell(varIntermediate, item);\n                        varIntermediate.push(item);\n                        if (newItems.length) funcReturn(newItems, varIntermediate);\n                        else if (varIntermediate.length === n) returnArray.push(varIntermediate.concat());\n                        varIntermediate.pop();\n                    }\n                })\n                if(varIntermediate.length===1) {\n                    if(n===1)\n                        returnArray.push(varIntermediate.concat());\n                    indexCell++;\n                    let items:Array<string>,\n                        intermediateArray:Array<string>;\n                    if(indexCell!==cells.length) {\n                        items = objArray[cells[indexCell]];\n                        intermediateArray = [cells[indexCell]];\n                    }\n                    else {\n                        items = [];\n                        intermediateArray = [];\n                    }\n                    funcReturn(items, intermediateArray);\n                }\n            }\n            else {\n                result = true;\n                return;\n            }\n\n            if(result) return;\n        }\n        funcReturn();\n        return returnArray;\n    }\n    let boolArray: Array<string> = [];\n    const locatedQueens:Array<Array<string>> = recursive(e.data[0]);\n    locatedQueens.forEach((locatedQueen:Array<string>)=>{\n        let newArray:string = e.data[1].map((elArray: Array<string>) => {\n            return elArray.map<string>((str: string) => locatedQueen.includes(str)?String.fromCharCode(9819):\".\").join(\" \")\n        }).join('\\n');\n        if (!boolArray.includes(newArray))\n            boolArray.push(newArray);\n    });\n    if(e.ports) e.ports[0].postMessage(boolArray);\n    if(e.data[2]) e.data[2](boolArray);\n    return;\n}\n\nfunction fn2workerURL(fn:(e:MessageEvent<[obj<Array<string>>,Array<Array<string>>,(array:Array<string>)=>void]>)=>void) {\n    let blob:Blob = new Blob([`onmessage = ${fn.toString().replace(/e\\.ports\\[0\\]\\.|window\\./g,\"\")}`], {type: 'application/javascript'})\n    return URL.createObjectURL(blob)\n}\nexport default fn2workerURL(onmessage);\n","import React, {FormEvent, useEffect, useRef, useState} from 'react';\nimport worker_script, {onmessage} from \"./worker\";\nimport './App.css';\n\nexport let loading:string = \"Загрузка...\";\nexport let outputError:string = 'доски NaN * NaN не существует'\n\n//global.window.URL.createObjectURL = jest.fn();\n//global.window.URL.revokeObjectURL = jest.fn();\n\nexport interface obj<T> {\n    [key: string]: T\n}\ninterface FormElements extends HTMLCollection {\n    n: HTMLInputElement\n}\ndeclare var Blob: {\n    prototype: Blob;\n    new (): Blob;\n    new (request: Array<string>, mime?: {type:string}): Blob;\n}\n\n\nfunction App() {\n    const n = useRef<number>(0);\n    const time = useRef<number>(0);\n    const [valueInput, setInput] = useState<string>(\"8\");\n    const form = useRef<HTMLFormElement>(null);\n    const [count, setCount] = useState<number|string>();\n    const myWorker = useRef<Worker>();\n\n    function download(data:string, filename:string, type:string):void {\n        let file:Blob = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            let a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            a.click();\n            window.URL.revokeObjectURL(url);\n        }\n    }\n\n    function onmessageWorker(e:MessageEvent<Array<string>>):void {\n        console.log(`n = ${n.current}, ${(+ Date.now() - time.current)}ms - время нахождения всевозможных значений`);\n        if(e.data.length) download(e.data.join('\\n'), `queens${n.current}.txt`, \"text/html\");\n        n.current = 0;\n        setCount(e.data.length);\n    }\n\n    useEffect(()=>{\n        if (window.Worker && !myWorker.current) {\n            myWorker.current = new Worker(worker_script);\n            myWorker.current.addEventListener(\"message\", onmessageWorker, false);\n        }\n    },[])\n\n    useEffect(()=>{\n        if (n.current) {\n            time.current = (+ Date.now());\n            let array: Array<Array<string>> = [],\n                objArray: obj<Array<string>> = {};\n            for (let i = 0; i < n.current; i++) {\n                array.push([]);\n                for (let j = 0; j < n.current; j++)\n                    array[i].push(`${i}${j}`);\n            }\n            array.forEach((el1: Array<string>, index1: number) => {\n                el1.forEach((el2: string, index2: number) => {\n                    objArray[el2] = [];\n                    for (let i = 0; i < n.current; i++) {\n                        if (i === index1) continue;\n                        for (let j = 0; j < n.current; j++) {\n                            if (j === index2 || Math.abs(j - index2) === Math.abs(i - index1)) continue;\n                            objArray[el2].push(`${i}${j}`);\n                        }\n                    }\n                })\n            })\n            if (myWorker.current) myWorker.current.postMessage([objArray,array]);\n            else {\n                let e:{data:[obj<Array<string>>,Array<Array<string>>,(array:Array<string>)=>void]} = {data:[objArray,array,function(array:Array<string>):void {\n                    onmessageWorker({data:array} as MessageEvent<Array<string>>)\n                }]};\n                onmessage(e as MessageEvent<[obj<Array<string>>,Array<Array<string>>,(array:Array<string>)=>void]>);\n            }\n        }\n        else if (count === loading) setCount(outputError);\n    },[count])\n    function onSubmit(event:FormEvent):void {\n        n.current = parseInt((form.current?.elements as FormElements).n.value);\n        setCount(loading);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    function handleChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        setInput((/[1-9][0-9]?/.exec(event.target.value) as string|null)||'');\n    }\n    return (\n        <React.Fragment>\n            <h3>Задача о Ферзях</h3>\n            <form onSubmit={onSubmit} ref={form}>\n                <label htmlFor=\"n\">n =</label>\n                <input type=\"text\" value={valueInput} name=\"n\" onChange={handleChange} id=\"n\" disabled={count===loading?true:false}/>\n                <input type=\"submit\" value={\"Найти\"} disabled={count===loading?true:false}/>\n            </form>\n            <div className=\"count\" data-testid=\"count-element\">\n                {count}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}